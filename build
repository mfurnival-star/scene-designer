#!/bin/bash
#

git add . && git commit -m "updates" && git push

exit

# Modular build script for shapes.js and index.html injection
# - Concatenates JS part files in canonical order from shapes.parts.index.md
# - Injects LOG level, destination, server URL, and token into index.html and optionally shapes.js
# - Optionally enables/disables Bearer logic
# - All config can be set via environment or CLI arguments

set -e

#################################
#         USAGE/HELP            #
#################################
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
  echo "Usage: $0 [LOG_LEVEL] [LOG_DEST] [LOG_SERVER_URL] [LOG_SERVER_TOKEN] [ENABLE_BEARER]"
  echo
  echo "Builds shapes.js by concatenating modular parts and injects config into index.html."
  echo
  echo "Arguments (all are optional, environment variables preferred):"
  echo "  LOG_LEVEL         Log level: ERROR, WARN, INFO, DEBUG, TRACE (default: \$LOG_LEVEL or ERROR)"
  echo "  LOG_DEST          Log destination: console, server, both (default: \$LOG_DEST or console)"
  echo "  LOG_SERVER_URL    Log server URL (default: \$LOG_SERVER_URL or http://143.47.247.184/logstream)"
  echo "  LOG_SERVER_TOKEN  Bearer token for server (default: \$LOGSTREAM_SECRET or blank if unset)"
  echo "  ENABLE_BEARER     1 to enable Bearer token, 0 to disable (default: \$DISABLE_BEARER or 0)"
  echo
  echo "Recommended: Set environment variables, e.g.:"
  echo "  export LOG_LEVEL=DEBUG"
  echo "  export LOG_DEST=both"
  echo "  export LOG_SERVER_URL=http://host/log"
  echo "  export LOGSTREAM_SECRET=supersecret"
  echo "  export ENABLE_BEARER=1"
  echo
  echo "Then run: $0"
  echo
  echo "To see this help: $0 --help"
  exit 0
fi

# --- Configurable settings (env or args) ---
LOG_LEVEL="${LOG_LEVEL:-ERROR}"         # Default log level
LOG_DEST="${LOG_DEST:-console}"         # Default log destination
LOG_SERVER_URL="${LOG_SERVER_URL:-http://143.47.247.184/logstream}"
LOG_SERVER_TOKEN="${LOGSTREAM_SECRET:-}"
ENABLE_BEARER="${ENABLE_BEARER:-0}"    # 1 to require Bearer, 0 to disable check

# CLI overrides: ./build.sh INFO server http://host/logstream mytoken 1
if [ $# -ge 1 ]; then LOG_LEVEL="$1"; fi
if [ $# -ge 2 ]; then LOG_DEST="$2"; fi
if [ $# -ge 3 ]; then LOG_SERVER_URL="$3"; fi
if [ $# -ge 4 ]; then LOG_SERVER_TOKEN="$4"; fi
if [ $# -ge 5 ]; then ENABLE_BEARER="$5"; fi

echo "Building with:"
echo "  LOG_LEVEL      = $LOG_LEVEL"
echo "  LOG_DEST       = $LOG_DEST"
echo "  LOG_SERVER_URL = $LOG_SERVER_URL"
echo "  LOG_SERVER_TOKEN = (not shown)"
echo "  ENABLE_BEARER  = $ENABLE_BEARER"

# --- Step 1: Extract file list from shapes.parts.index.md ---
filelist=$(awk '/^```filelist$/{flag=1; next} /^```$/{flag=0} flag' shapes.parts.index.md)

if [ -z "$filelist" ]; then
  echo "Error: No filelist found in shapes.parts.index.md"
  exit 1
fi

# --- Step 2: Check that all files exist ---
missing=0
for f in $filelist; do
  if [ ! -f "$f" ]; then
    echo "Error: Missing file '$f'"
    missing=1
  fi
done
if [ "$missing" -eq 1 ]; then
  exit 2
fi

# --- Step 3: Concatenate all part files in the specified order ---
cat $filelist > shapes.js

# --- Step 4: Inject log config at the top of index.html ---
# (Replace values if already present, or add if not)
if grep -q 'window._externalLogServerURL' index.html; then
  sed -i "s|window._externalLogServerURL *= *[\"'][^\"']*[\"'];|window._externalLogServerURL = \"$LOG_SERVER_URL\";|" index.html
else
  sed -i "/<head>/a\\
  <script>window._externalLogServerURL = \"$LOG_SERVER_URL\";</script>
  " index.html
fi

if grep -q 'window._externalLogServerToken' index.html; then
  # Only set if LOG_SERVER_TOKEN is set; otherwise, remove the line
  if [ -n "$LOG_SERVER_TOKEN" ]; then
    sed -i "s|window._externalLogServerToken *= *[\"'][^\"']*[\"'];|window._externalLogServerToken = \"$LOG_SERVER_TOKEN\";|" index.html
  else
    sed -i "/window._externalLogServerToken/d" index.html
  fi
else
  if [ -n "$LOG_SERVER_TOKEN" ]; then
    sed -i "/window._externalLogServerURL/a\\
  window._externalLogServerToken = \"$LOG_SERVER_TOKEN\";
  " index.html
  fi
fi

if grep -q 'window._settings.DEBUG_LOG_LEVEL' index.html; then
  sed -i "s|window._settings.DEBUG_LOG_LEVEL *= *[\"'][^\"']*[\"'];|window._settings.DEBUG_LOG_LEVEL = \"$LOG_LEVEL\";|" index.html
else
  sed -i "/window._externalLogServerToken/a\\
  window._settings = window._settings || {};
  window._settings.DEBUG_LOG_LEVEL = \"$LOG_LEVEL\";
  " index.html
fi

if grep -q 'window._settings.LOG_OUTPUT_DEST' index.html; then
  sed -i "s|window._settings.LOG_OUTPUT_DEST *= *[\"'][^\"']*[\"'];|window._settings.LOG_OUTPUT_DEST = \"$LOG_DEST\";|" index.html
else
  sed -i "/window._settings.DEBUG_LOG_LEVEL/a\\
  window._settings.LOG_OUTPUT_DEST = \"$LOG_DEST\";
  " index.html
fi

# --- Step 5: Optionally inject Bearer token check logic into shapes.js ---
# Look for a marker comment and insert, or replace an existing bearer check stub block
BEARER_MARKER='// BEARER_TOKEN_CHECK_BLOCK'
if grep -q "$BEARER_MARKER" shapes.js; then
  if [ "$ENABLE_BEARER" -eq 1 ] && [ -n "$LOG_SERVER_TOKEN" ]; then
    sed -i "/$BEARER_MARKER/{
      n;N;N;d
      a\\
      if (window._externalLogServerToken && window._externalLogServerToken.length > 0) {\\
        headers['Authorization'] = 'Bearer ' + window._externalLogServerToken;\\
      }
    }" shapes.js
  else
    # Remove the Bearer check block (replace with a no-op or comment)
    sed -i "/$BEARER_MARKER/{
      n;N;N;d
      a\\
      // Bearer auth disabled by build or token unset
    }" shapes.js
  fi
fi

# --- Step 6: Commit and push ---
git add .
git commit -m "Updates"
git push

echo "Build complete."

