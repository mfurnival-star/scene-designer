==== [Deploy Debug Report] Sun Sep 14 12:25:05 BST 2025 ====

--- ENVIRONMENT VARIABLES ---
HOME=/home/ubuntu
USER=ubuntu
PATH=/home/ubuntu/.nvm/versions/node/v22.19.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin

--- CURRENT DIRECTORY ---
/home/ubuntu/scene-designer

--- deploy.sh CONTENTS ---
#!/bin/bash
# Scene Designer Deploy Script (robust deployment)
# ---------------------------------------------------------------------------
# - Ensures the correct, injected dist/index.html is deployed.
# - Verifies final deployed file matches what was generated.
# ---------------------------------------------------------------------------

set -euo pipefail

PROJECT_DIR="$HOME/scene-designer"
BUILD_DIR="$PROJECT_DIR/dist"
DEPLOY_DIR="/var/www/scene-designer"
INDEX_HTML="$BUILD_DIR/index.html"
DATESTAMP=$(date +"%Y-%m-%d %H:%M:%S")

# ---- CENTRALIZED DEFAULTS ----
DEFAULT_LOG_LEVEL="ERROR"
DEFAULT_LOG_DEST="console"
DEFAULT_LOG_SERVER_URL="http://143.47.247.184/logstream"
DEFAULT_LOG_SERVER_TOKEN=""
DEFAULT_INJECT_ERUDA=0

# ---- Help/Usage ----
if [[ "${1:-}" == "-h" || "${1:-}" == "--help" ]]; then
  cat <<EOF
Usage: [VAR=VALUE ...] ./deploy.sh

Build, inject log config/Eruda, and deploy Scene Designer.

Environment variables (all optional, defaults shown):

  LOG_LEVEL        Log level (ERROR, WARN, INFO, DEBUG, TRACE)
                   [default: $DEFAULT_LOG_LEVEL]
  LOG_DEST         Log destination (console, server, both)
                   [default: $DEFAULT_LOG_DEST]
  LOG_SERVER_URL   Log server URL (used if LOG_DEST is server/both)
                   [default: $DEFAULT_LOG_SERVER_URL]
  LOG_SERVER_TOKEN Bearer token for server (if needed)
                   [default: $DEFAULT_LOG_SERVER_TOKEN]
  INJECT_ERUDA     1 to add Eruda debug console to HTML, 0 otherwise
                   [default: $DEFAULT_INJECT_ERUDA]

Examples:
  LOG_LEVEL=TRACE LOG_DEST=both INJECT_ERUDA=1 ./deploy.sh
  LOG_SERVER_URL="https://myhost/log" ./deploy.sh
  ./deploy.sh --help

EOF
  exit 0
fi

# ---- Assign from env or use defaults ----
LOG_LEVEL="${LOG_LEVEL:-$DEFAULT_LOG_LEVEL}"
LOG_DEST="${LOG_DEST:-$DEFAULT_LOG_DEST}"
LOG_SERVER_URL="${LOG_SERVER_URL:-$DEFAULT_LOG_SERVER_URL}"
LOG_SERVER_TOKEN="${LOG_SERVER_TOKEN:-$DEFAULT_LOG_SERVER_TOKEN}"
INJECT_ERUDA="${INJECT_ERUDA:-$DEFAULT_INJECT_ERUDA}"

cd "$PROJECT_DIR"

echo "[$DATESTAMP] === Building project ==="
npm run build

echo "[$DATESTAMP] === Ensuring index.html exists in $BUILD_DIR ==="
if [ ! -f "$INDEX_HTML" ]; then
  cp "$PROJECT_DIR/index.html" "$INDEX_HTML"
  echo "Copied index.html to $INDEX_HTML"
fi

echo "[$DATESTAMP] === Injecting log config into $INDEX_HTML ==="
# Remove any previous injected settings block
sed -i '/<!-- BEGIN LOG SETTINGS -->/,/<!-- END LOG SETTINGS -->/d' "$INDEX_HTML"

awk -v log_level="$LOG_LEVEL" \
    -v log_dest="$LOG_DEST" \
    -v log_server_url="$LOG_SERVER_URL" \
    -v log_server_token="$LOG_SERVER_TOKEN" \
    -v inject_eruda="$INJECT_ERUDA" \
    '
    /<head>/ {
        print;
        print "  <!-- BEGIN LOG SETTINGS -->";
        print "  <script>";
        print "    window._settings = window._settings || {};";
        print "    window._settings.DEBUG_LOG_LEVEL = \"" log_level "\";";
        print "    window._settings.LOG_OUTPUT_DEST = \"" log_dest "\";";
        print "    window._externalLogServerURL = \"" log_server_url "\";";
        print "    window._externalLogServerToken = \"" log_server_token "\";";
        print "  </script>";
        if (inject_eruda == "1") {
          print "  <script src=\"https://cdn.jsdelivr.net/npm/eruda\"></script>";
          print "  <script>eruda.init();</script>";
        }
        print "  <!-- END LOG SETTINGS -->";
        next;
    } 1
    ' "$INDEX_HTML" > "$INDEX_HTML.tmp" && mv "$INDEX_HTML.tmp" "$INDEX_HTML"

echo "[$DATESTAMP] === Verifying injected log config in $INDEX_HTML ==="
grep 'DEBUG_LOG_LEVEL\|LOG_OUTPUT_DEST\|externalLogServerURL\|externalLogServerToken' "$INDEX_HTML" || true

echo "[$DATESTAMP] === Deploying to $DEPLOY_DIR ==="

# --- Force remove the old deployed index.html to avoid stale file ---
sudo rm -f "$DEPLOY_DIR/index.html"

# --- Now rsync the new dist/ (including injected index.html) ---
sudo mkdir -p "$DEPLOY_DIR"
sudo rsync -av --delete "$BUILD_DIR/" "$DEPLOY_DIR/"

echo "[$DATESTAMP] === Verifying deployed index.html ==="
sudo grep 'DEBUG_LOG_LEVEL\|LOG_OUTPUT_DEST\|externalLogServerURL\|externalLogServerToken' "$DEPLOY_DIR/index.html" || true

echo "[$DATESTAMP] === Git add/commit/push ==="
git add .
git commit -m "Deploy at $DATESTAMP"
git push

echo "[$DATESTAMP] === Deployment complete! ==="
echo "App should be live at: http://your-server-ip/scene-designer/"

--- index.html (PROJECT ROOT, PRE-BUILD) ---
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Scene Designer (Golden Layout Dev)</title>
  <link rel="stylesheet" href="https://unpkg.com/golden-layout@2.6.0/dist/css/goldenlayout-base.css">
  <link rel="stylesheet" href="https://unpkg.com/golden-layout@2.6.0/dist/css/themes/goldenlayout-light-theme.css">
  <style>
    html, body, #gl-root { height: 100%; width: 100%; margin: 0; padding: 0; }
    #gl-root { height: 100vh; width: 100vw; background: #f7f9fc; }
    /* Removed #error-log-box styles: error log is now a panel! */
  </style>
  <!-- BEGIN LOG SETTINGS -->
  <script>
    window._settings = window._settings || {};
    window._settings.DEBUG_LOG_LEVEL = "ERROR";
    window._settings.LOG_OUTPUT_DEST = "console";
    window._externalLogServerURL = "";
    window._externalLogServerToken = "";
  </script>
  <!-- END LOG SETTINGS -->
  <!--
    To inject Eruda for mobile debugging, set INJECT_ERUDA=1 in deploy.sh,
    which will insert the following lines at build/deploy time:
    <script src="https://cdn.jsdelivr.net/npm/eruda"></script>
    <script>eruda.init();</script>
  -->
</head>
<body>
  <div id="gl-root"></div>
  <!-- Removed error-log-box and all window.logToBox logic -->
  <script src="bundle.js"></script>
</body>
</html>

--- dist/index.html (PRE-BUILD/INJECTION) ---
<!DOCTYPE html>
<html lang="en">
<head>
  <!-- BEGIN LOG SETTINGS -->
  <script>
    window._settings = window._settings || {};
    window._settings.DEBUG_LOG_LEVEL = "TRACE";
    window._settings.LOG_OUTPUT_DEST = "both";
    window._externalLogServerURL = "http://143.47.247.184/logstream";
    window._externalLogServerToken = "";
  </script>
  <script src="https://cdn.jsdelivr.net/npm/eruda"></script>
  <script>eruda.init();</script>
  <!-- END LOG SETTINGS -->
  <meta charset="UTF-8">
  <title>Scene Designer (Golden Layout Dev)</title>
  <link rel="stylesheet" href="https://unpkg.com/golden-layout@2.6.0/dist/css/goldenlayout-base.css">
  <link rel="stylesheet" href="https://unpkg.com/golden-layout@2.6.0/dist/css/themes/goldenlayout-light-theme.css">
  <style>
    html, body, #gl-root { height: 100%; width: 100%; margin: 0; padding: 0; }
    #gl-root { height: 100vh; width: 100vw; background: #f7f9fc; }
    /* Removed #error-log-box styles: error log is now a panel! */
  </style>
  <!--
    To inject Eruda for mobile debugging, set INJECT_ERUDA=1 in deploy.sh,
    which will insert the following lines at build/deploy time:
    <script src="https://cdn.jsdelivr.net/npm/eruda"></script>
    <script>eruda.init();</script>
  -->
</head>
<body>
  <div id="gl-root"></div>
  <!-- Removed error-log-box and all window.logToBox logic -->
  <script src="bundle.js"></script>
</body>
</html>

--- Running: npm run build ---

> scene-designer@1.0.0 build
> webpack --mode production

asset bundle.js 343 KiB [compared for emit] [minimized] [big] (name: main)
orphan modules 806 KiB [orphan] 97 modules
runtime modules 663 bytes 3 modules
cacheable modules 832 KiB
  ./src/layout.js + 96 modules 809 KiB [built] [code generated]
  ./node_modules/@simonwep/pickr/dist/pickr.min.js 23 KiB [built] [code generated]

WARNING in asset size limit: The following asset(s) exceed the recommended size limit (244 KiB).
This can impact web performance.
Assets: 
  bundle.js (343 KiB)

WARNING in entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (244 KiB). This can impact web performance.
Entrypoints:
  main (343 KiB)
      bundle.js

WARNING in webpack performance recommendations: 
You can limit the size of your bundles by using import() or require.ensure to lazy load some parts of your application.
For more info visit https://webpack.js.org/guides/code-splitting/

webpack 5.101.3 compiled with 3 warnings in 36117 ms

--- dist/index.html (AFTER BUILD, PRE-INJECTION) ---
dist/index.html not found.

--- Running: LOG_LEVEL=TRACE LOG_DEST=both INJECT_ERUDA=1 ./deploy.sh ---
[2025-09-14 12:25:44] === Building project ===

> scene-designer@1.0.0 build
> webpack --mode production

asset bundle.js 343 KiB [compared for emit] [minimized] [big] (name: main)
orphan modules 806 KiB [orphan] 97 modules
runtime modules 663 bytes 3 modules
cacheable modules 832 KiB
  ./src/layout.js + 96 modules 809 KiB [built] [code generated]
  ./node_modules/@simonwep/pickr/dist/pickr.min.js 23 KiB [built] [code generated]

WARNING in asset size limit: The following asset(s) exceed the recommended size limit (244 KiB).
This can impact web performance.
Assets: 
  bundle.js (343 KiB)

WARNING in entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (244 KiB). This can impact web performance.
Entrypoints:
  main (343 KiB)
      bundle.js

WARNING in webpack performance recommendations: 
You can limit the size of your bundles by using import() or require.ensure to lazy load some parts of your application.
For more info visit https://webpack.js.org/guides/code-splitting/

webpack 5.101.3 compiled with 3 warnings in 35813 ms
[2025-09-14 12:25:44] === Ensuring index.html exists in /home/ubuntu/scene-designer/dist ===
Copied index.html to /home/ubuntu/scene-designer/dist/index.html
[2025-09-14 12:25:44] === Injecting log config into /home/ubuntu/scene-designer/dist/index.html ===
[2025-09-14 12:25:44] === Verifying injected log config in /home/ubuntu/scene-designer/dist/index.html ===
    window._settings.DEBUG_LOG_LEVEL = "TRACE";
    window._settings.LOG_OUTPUT_DEST = "both";
    window._externalLogServerURL = "http://143.47.247.184/logstream";
    window._externalLogServerToken = "";
[2025-09-14 12:25:44] === Deploying to /var/www/scene-designer ===
sending incremental file list
deleting src/state.js
deleting src/sidebar.js_bak
deleting src/sidebar.js
deleting src/settings.js_bak
deleting src/settings.js
deleting src/selection.js
deleting src/modules.index.md
deleting src/main.js
deleting src/log.js
deleting src/layout.js
deleting src/errorlog.js
deleting src/canvas.js
deleting src/
deleting images/sample1.png
deleting images/mainmenu.png
deleting images/
index.html

sent 1,557 bytes  received 323 bytes  3,760.00 bytes/sec
total size is 352,144  speedup is 187.31
[2025-09-14 12:25:44] === Verifying deployed index.html ===
    window._settings.DEBUG_LOG_LEVEL = "TRACE";
    window._settings.LOG_OUTPUT_DEST = "both";
    window._externalLogServerURL = "http://143.47.247.184/logstream";
    window._externalLogServerToken = "";
[2025-09-14 12:25:44] === Git add/commit/push ===
[main 2ea2cc4] Deploy at 2025-09-14 12:25:44
 2 files changed, 432 insertions(+), 131 deletions(-)
 create mode 100644 deploy_debug_report_1.txt
remote: Already on 'main'        
remote: sending incremental file list        
remote: index.html        
remote: images/        
remote: images/mainmenu.png        
remote: images/sample1.png        
remote: src/        
remote: src/canvas.js        
remote: src/errorlog.js        
remote: src/layout.js        
remote: src/log.js        
remote: src/main.js        
remote: src/modules.index.md        
remote: src/selection.js        
remote: src/settings.js        
remote: src/settings.js_bak        
remote: src/sidebar.js        
remote: src/sidebar.js_bak        
remote: src/state.js        
remote: 
remote: sent 814,859 bytes  received 321 bytes  1,630,360.00 bytes/sec        
remote: total size is 813,565  speedup is 1.00        
remote: To github.com:mfurnival-star/scene-designer.git        
remote:    6258e9a..2ea2cc4  main -> main        
To /opt/git/scene-designer.git
   6258e9a..2ea2cc4  main -> main
[2025-09-14 12:25:44] === Deployment complete! ===
App should be live at: http://your-server-ip/scene-designer/

--- dist/index.html (AFTER INJECTION) ---
<!DOCTYPE html>
<html lang="en">
<head>
  <!-- BEGIN LOG SETTINGS -->
  <script>
    window._settings = window._settings || {};
    window._settings.DEBUG_LOG_LEVEL = "TRACE";
    window._settings.LOG_OUTPUT_DEST = "both";
    window._externalLogServerURL = "http://143.47.247.184/logstream";
    window._externalLogServerToken = "";
  </script>
  <script src="https://cdn.jsdelivr.net/npm/eruda"></script>
  <script>eruda.init();</script>
  <!-- END LOG SETTINGS -->
  <meta charset="UTF-8">
  <title>Scene Designer (Golden Layout Dev)</title>
  <link rel="stylesheet" href="https://unpkg.com/golden-layout@2.6.0/dist/css/goldenlayout-base.css">
  <link rel="stylesheet" href="https://unpkg.com/golden-layout@2.6.0/dist/css/themes/goldenlayout-light-theme.css">
  <style>
    html, body, #gl-root { height: 100%; width: 100%; margin: 0; padding: 0; }
    #gl-root { height: 100vh; width: 100vw; background: #f7f9fc; }
    /* Removed #error-log-box styles: error log is now a panel! */
  </style>
  <!--
    To inject Eruda for mobile debugging, set INJECT_ERUDA=1 in deploy.sh,
    which will insert the following lines at build/deploy time:
    <script src="https://cdn.jsdelivr.net/npm/eruda"></script>
    <script>eruda.init();</script>
  -->
</head>
<body>
  <div id="gl-root"></div>
  <!-- Removed error-log-box and all window.logToBox logic -->
  <script src="bundle.js"></script>
</body>
</html>

--- /var/www/scene-designer/index.html (DEPLOYED) ---
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Scene Designer (Golden Layout Dev)</title>
  <link rel="stylesheet" href="https://unpkg.com/golden-layout@2.6.0/dist/css/goldenlayout-base.css">
  <link rel="stylesheet" href="https://unpkg.com/golden-layout@2.6.0/dist/css/themes/goldenlayout-light-theme.css">
  <style>
    html, body, #gl-root { height: 100%; width: 100%; margin: 0; padding: 0; }
    #gl-root { height: 100vh; width: 100vw; background: #f7f9fc; }
    /* Removed #error-log-box styles: error log is now a panel! */
  </style>
  <!-- BEGIN LOG SETTINGS -->
  <script>
    window._settings = window._settings || {};
    window._settings.DEBUG_LOG_LEVEL = "ERROR";
    window._settings.LOG_OUTPUT_DEST = "console";
    window._externalLogServerURL = "";
    window._externalLogServerToken = "";
  </script>
  <!-- END LOG SETTINGS -->
  <!--
    To inject Eruda for mobile debugging, set INJECT_ERUDA=1 in deploy.sh,
    which will insert the following lines at build/deploy time:
    <script src="https://cdn.jsdelivr.net/npm/eruda"></script>
    <script>eruda.init();</script>
  -->
</head>
<body>
  <div id="gl-root"></div>
  <!-- Removed error-log-box and all window.logToBox logic -->
  <script src="bundle.js"></script>
</body>
</html>

--- grep LOG_LEVEL and LOG_OUTPUT_DEST in all index.html files ---

--- grep BEGIN LOG SETTINGS in all index.html files ---

==== END OF REPORT ====
